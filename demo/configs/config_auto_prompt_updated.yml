# This is a generated template. Modify the values as needed.

custom_function: demo/auto_reply.reply.reply
dataset:
  file_path: demo/data/test_data.csv
  reader: csv_reader
  source_type: dataset
description: Generated experiment config

# evaluators: []

# wrapper_configs: {}

evaluators:
  - evaluator_type: all
    input_description: Guide GPT-4 to role-play as a predefined fantasy character for a Weibo auto-reply chatbot, ensuring responses align with character traits, backstory, and Chinese cultural context.
    metric_calculators: []
    name: openai_elo_evaluator
    model_name: gpt-4

selection_strategy:
  ahp_selection:
    criteria:
      - openai_elo_evaluator
      - average_token_usage
      - average_latency
    criteria_maximization:
      openai_elo_evaluator: true
      average_latency: false
      average_token_usage: false
    criteria_weights:
      openai_elo_evaluator: 0.6
      average_latency: 0.2
      average_token_usage: 0.2

variations:
  - generator_config:
      diversify: false
      max_tokens: 7000
      number_of_variations: 5
      model_name: gpt-4
      prompt:
        - content: |-

            Your objective is to construct a concise instruction prompt for GPT-4. This prompt will guide GPT-4 in its interactions as a fantasy character for a Weibo auto-reply chatbot tailored to Chinese audiences. 

            Points to emphasize in your instruction:
            - GPT-4 will be role-playing a fantasy character. The specifics of this character – their name, traits, backstory, and nuances – will be provided via placeholders.
            - GPT-4's responses should align with Weibo's conversational style and should be mindful of Chinese cultural and linguistic nuances.
            - At all times, GPT-4 must remain in character, ensuring interactions are genuine, lively, and immersive.
            - The character's personality should be accentuated, including their interests, desires, emotions, and other traits.
            - `{query_context}` acts as GPT-4's reservoir of memory, holding essential background about the character.
            - GPT-4 should not generate or elaborate on the character's story but strictly follow the details provided through placeholders.

            Craft your instruction ensuring GPT-4 understands that it will only provide answers in line with the fantasy character's persona and nothing beyond the scope of the placeholders.
            Craft your instruction ensuring GPT-4 understands that it will only provide answers in line with the Chinese Weibo conversational style, but short
            keep your output crisp: only the prompt, devoid of any extraneous content.

          role: system
        - content: |-

            {CHARACTER_BIO} represent character's shot bio
            {CHARACTER_NAME} represent character name
            {CHARACTER_QUOTES} represent the some of the characer's quotes
            {query_context} represent context about the chracter, given user's reply in the prompt

          role: user
      variables:
        - CHARACTER_BIO
        - CHARACTER_NAME
        - CHARACTER_QUOTES
        - query_context
      output_path: generated_prompt_chinese.pkl
    generator_name: openai_prompt_based_variation_generator

    name:
      chatbot_prompt

      # Variations allow for dynamic content during experiments.
      # They are identified by a globally unique name. For example, in your code,
      # you might reference a variation by its name, like:
      # variation = StringWrapper("hello", 'test_experiment')
      # In this config, you would define the variations associated with that name.
